==================
If true with block
==================

proc :: () { 
  if true {

  }
}

---

(source_file
  (procedure_declaration
    (identifier)
    (procedure
      (parameters)
      (block
        (if_statement
          (boolean)
          (block)
        )
      )
    )
  )
)

==================
If with variable and with block
==================

proc :: () { 
  if is_stupid {

  }
}

---

(source_file
  (procedure_declaration
    (identifier)
    (procedure
      (parameters)
      (block
        (if_statement
          (identifier)
          (block)
        )
      )
    )
  )
)

==================
If with parenthesis
==================

proc :: () { 
  if (is_stupid) {

  }
}

---

(source_file
  (procedure_declaration
    (identifier)
    (procedure
      (parameters)
      (block
        (if_statement
          (parenthesized_expression (identifier))
          (block)
        )
      )
    )
  )
)


==================
If with parenthesis and some boolean operators
==================

proc :: () { 
  if (is_stupid && (eats_rocks || has_small_brain)) {

  }
}

---

(source_file
  (procedure_declaration
    (identifier)
    (procedure
      (parameters)
      (block
        (if_statement
          (parenthesized_expression 
            (binary_expression
              (identifier)
              (parenthesized_expression
                (binary_expression
                  (identifier)
                  (identifier)
                )
              )
            )
          )
          (block)
        )
      )
    )
  )
)

==================
If then same line
==================

proc :: () { 
  if is_stupid then print("nom nom\n");
}

---

(source_file
  (procedure_declaration
    (identifier)
    (procedure
      (parameters)
      (block
        (if_statement
          (identifier)
          (call_expression
            (identifier)
            (string
              (string_content)
              (escape_sequence)
            )
          )
        )
      )
    )
  )
)

==================
If else
==================

proc :: () { 
  if is_stupid 
  {
    print("nom nom\n");
  }
  else
  {
    print("Smort\n");
  }
}

---

(source_file
  (procedure_declaration
    (identifier)
    (procedure
      (parameters)
      (block
        (if_statement
          (identifier)
          (block
            (call_expression
              (identifier)
              (string
                (string_content)
                (escape_sequence)
              )
            )
          )
          (else_clause
            (block
              (call_expression
                (identifier)
                (string
                  (string_content)
                  (escape_sequence)
                )
              )
            )
          )
        )
      )
    )
  )
)

==================
If else if
==================

proc :: () { 
  if is_stupid 
  {
    print("nom nom\n");
  }
  else if is_smart
  {
    print("Smort\n");
  }
}

---

(source_file
  (procedure_declaration
    (identifier)
    (procedure
      (parameters)
      (block
        (if_statement
          (identifier)
          (block
            (call_expression
              (identifier)
              (string
                (string_content)
                (escape_sequence)
              )
            )
          )
          (else_clause
            (if_statement
              (identifier)
              (block
                (call_expression
                  (identifier)
                  (string
                    (string_content)
                    (escape_sequence)
                  )
                )
              )
            )
          )
        )
      )
    )
  )
)


==================
Ifx true with block
==================

proc :: () { 
  a := ifx true {
    1;
  }
}

---

(source_file
  (procedure_declaration
    (identifier)
    (procedure
      (parameters)
      (block
        (variable_declaration
          (identifier)
          (if_expression
            (boolean)
            (block (number))
          )
        )
      )
    )
  )
)

==================
If case
==================

proc :: () { 
  if soda_flavor_id == {
    case 0;     #through;
    case 1;      #through;

    case 2; print("The fruit '%' is good.\n", soda_flavor_id);

    case 3;    #through;

    case;             print("This fruit '%' is bad.\n", soda_flavor_id);
  }
}

---

(source_file
  (procedure_declaration
    (identifier)
    (procedure
      (parameters)
      (block
        (if_case_statement
          (identifier)
          (switch_case
            (number)
            (through_statement)
          )
          (switch_case
            (number)
            (through_statement)
          )
          (switch_case
            (number)
            (call_expression
              (identifier)
              (string (string_content) (escape_sequence))
              (identifier)
            )
          )
          (switch_case
            (number)
            (through_statement)
          )
          (switch_case
            (call_expression
              (identifier)
              (string (string_content) (escape_sequence))
              (identifier)
            )
          )
        )
      )
    )
  )
)